[{"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js":"1","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js":"2","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js":"4","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js":"5","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js":"6","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js":"8","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js":"9","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js":"10","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js":"11","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js":"12","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\ButtonData.js":"13","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\MultiplierButtonData.js":"14"},{"size":498,"mtime":1611389831121,"results":"15","hashOfConfig":"16"},{"size":883,"mtime":1611423249905,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5014,"mtime":1611524111860,"results":"19","hashOfConfig":"16"},{"size":10231,"mtime":1611434527096,"results":"20","hashOfConfig":"16"},{"size":6103,"mtime":1611437849098,"results":"21","hashOfConfig":"16"},{"size":3835,"mtime":1611428002615,"results":"22","hashOfConfig":"16"},{"size":1769,"mtime":1611436245507,"results":"23","hashOfConfig":"16"},{"size":422,"mtime":1611391769122,"results":"24","hashOfConfig":"16"},{"size":791,"mtime":1611404393896,"results":"25","hashOfConfig":"16"},{"size":270,"mtime":1611394758847,"results":"26","hashOfConfig":"16"},{"size":6859,"mtime":1611527504350,"results":"27","hashOfConfig":"16"},{"size":245,"mtime":1611437179377,"results":"28","hashOfConfig":"16"},{"size":252,"mtime":1611437363941,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1f8zyqh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js",["66","67","68"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js",["69","70","71","72","73","74","75","76"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport green from \"./../../assets/green.svg\";\r\nimport purple from \"./../../assets/purple.svg\";\r\nimport orange from \"./../../assets/orange.svg\";\r\nimport plus from \"./../../assets/plusCircle.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { Transition } from \"@tailwindui/react\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n  const [profileToggle, setProfileToggle] = useState(false);\r\n  const [hamburgerMenuToggle, setHamburgerMenuToggle] = useState(false);\r\n  const [name, setName] = useState(`${localStorage.getItem(\"name\")}`);\r\n  const [image, setimage] = useState(`${localStorage.getItem(\"image\")}`);\r\n  const [gems, setGems] = useState(`${localStorage.getItem(\"gems\")}`);\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (currentUser === null) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  });\r\n  const handleLogOut = () => {\r\n    localStorage.clear();\r\n    history.go(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"glasseffectnavbar w-4/5 h-1/6 static z-50\">\r\n          <nav className=\"rounded\">\r\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                  <button\r\n                    className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n                    aria-expanded=\"false\"\r\n                    onClick={() => setHamburgerMenuToggle(!hamburgerMenuToggle)}\r\n                  >\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n\r\n                    <svg\r\n                      className=\"block h-6 w-6\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M4 6h16M4 12h16M4 18h16\"\r\n                      />\r\n                    </svg>\r\n\r\n                    <svg\r\n                      className=\"hidden h-6 w-6\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M6 18L18 6M6 6l12 12\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <img\r\n                      className=\"block lg:hidden h-8 w-auto\"\r\n                      src={green}\r\n                      alt=\"Mainlogo\"\r\n                    />\r\n\r\n                    <img\r\n                      className=\"hidden lg:block h-8 w-auto\"\r\n                      src={green}\r\n                      alt=\"Mainlogo\"\r\n                    />\r\n                    <Link to=\"/\">\r\n                      <h1 className=\"font-black block p-2\">Lucky Gems</h1>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                  <div className=\"hidden sm:block\">\r\n                    <div className=\"flex space-x-4\">\r\n                      <div className=\"flex justify-center\">\r\n                        <Link to=\"/addgems\">\r\n                          {\" \"}\r\n                          <img\r\n                            className=\"pr-2 mb-1 cursor-pointer fill-current text-white\"\r\n                            src={plus}\r\n                          />\r\n                        </Link>\r\n\r\n                        <h4 className=\"formtext font-bold mr-2\">{gems}</h4>\r\n                        <img className=\"h-7 rounded-md\" src={purple} />\r\n                      </div>\r\n                      {/* <div className=\"flex justify-center\">\r\n                        <h4 className=\"formtext  mr-2\">50</h4>\r\n                        <img className=\"h-7 rounded-md\" src={orange} />\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"ml-10 relative \">\r\n                    <div>\r\n                      {profileToggle ? (\r\n                        <button\r\n                          className=\"bg-white bg-opacity-30 flex text-sm rounded-full shadow-lg focus:outline-none\"\r\n                          onClick={() => setProfileToggle(!profileToggle)}\r\n                        >\r\n                          <span className=\"sr-only\">Open user menu</span>\r\n                          {name && (\r\n                            <h4\r\n                              className=\"p-1 font-bold hidden sm:block\"\r\n                              style={{ marginTop: \"0.4rem\" }}\r\n                            >\r\n                              {name[0].toUpperCase() +\r\n                                name.slice(1).toLowerCase()}\r\n                            </h4>\r\n                          )}\r\n\r\n                          <img\r\n                            className=\"m-0 h-8 w-8 rounded-full sm:m-1\"\r\n                            src={image}\r\n                            alt=\"\"\r\n                          />\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"bg-white bg-opacity-30 flex text-sm rounded-full shadow-xl shadow-inner focus:outline-none ring-1 ring-white\"\r\n                          onClick={() => setProfileToggle(!profileToggle)}\r\n                        >\r\n                          <span className=\"sr-only\">Open user menu</span>\r\n                          {name && (\r\n                            <h4\r\n                              className=\"p-1 font-bold hidden sm:block\"\r\n                              style={{ marginTop: \"0.4rem\" }}\r\n                            >\r\n                              {name[0].toUpperCase() +\r\n                                name.slice(1).toLowerCase()}\r\n                            </h4>\r\n                          )}\r\n\r\n                          <img\r\n                            className=\"m-0 h-8 w-8 rounded-full sm:m-1\"\r\n                            src={image}\r\n                            alt=\"\"\r\n                          />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    <Transition\r\n                      show={profileToggle}\r\n                      enter=\"transition ease-out duration-75\"\r\n                      enterFrom=\"transform opacity-0 scale-95\"\r\n                      enterTo=\"transform opacity-100 scale-100\"\r\n                      leave=\"transition ease-in duration-150\"\r\n                      leaveFrom=\"transform opacity-100 scale-100\"\r\n                      leaveTo=\"transform opacity-0 scale-95\"\r\n                    >\r\n                      <div\r\n                        className=\"origin-top-right absolute z-50 right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5\"\r\n                        role=\"menu\"\r\n                        aria-orientation=\"vertical\"\r\n                      >\r\n                        <Link\r\n                          to=\"/profile\"\r\n                          className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                        >\r\n                          Your Profile\r\n                        </Link>\r\n                        <Link\r\n                          to=\"/settings\"\r\n                          className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                        >\r\n                          Settings\r\n                        </Link>\r\n                        <Link\r\n                          onClick={handleLogOut}\r\n                          to=\"/login\"\r\n                          className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                        >\r\n                          Sign out\r\n                        </Link>\r\n                      </div>\r\n                    </Transition>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Transition\r\n              show={hamburgerMenuToggle}\r\n              enter=\"transition ease-out duration-300\"\r\n              enterFrom=\"transform opacity-0 scale-50\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-300\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"transform opacity-0 scale-50\"\r\n            >\r\n              <div className=\"block sm:hidden\">\r\n                <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                  >\r\n                    Gems\r\n                  </a>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                  >\r\n                    Your Gems\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </Transition>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js",["77","78","79","80","81"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport crystal from \"../../assets/crystal.svg\";\r\nimport \"./Multiplygems.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ButtonData } from \"./ButtonData\";\r\nimport { MultiplierButtonData } from \"./MultiplierButtonData\";\r\n\r\nconst header = {\r\n  headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n};\r\n\r\nconst Multiplygems = () => {\r\n  const [addGems, setAddGems] = useState(\"\");\r\n  const [multiplier, setMultiplier] = useState(\"\");\r\n  const [winRate, setWinRate] = useState(\"0.000\");\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (multiplier !== \"\") {\r\n      let percent;\r\n      percent = ((addGems * 100) / multiplier).toFixed(3);\r\n      setWinRate(percent);\r\n      console.log(percent);\r\n    }\r\n  }, [multiplier]);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  const handleButtonData = (value) => {\r\n    setAddGems(value);\r\n  };\r\n\r\n  const handleMultiplier = (value) => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = value * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"flex justify-center static z-10\">\r\n        <div className=\"glasseffectuser w-4/5 p-5\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3\">\r\n            <div className=\"rounded bg-yellow-50 shadow-lg bg-opacity-50\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-2xl font-bold my-2 formtext\">Your Gems</h1>\r\n                <img className=\"w-1/3\" src={purple} />\r\n                <div className=\"\">\r\n                  <span className=\"z-10 h-full leading-snug font-normal absolute absolute items-center justify-center w-8 pl-3 py-3\">\r\n                    <img src={purple} />\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={addGems}\r\n                    placeholder=\"Add Gems\"\r\n                    className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:shadow-outline pl-10\"\r\n                    onChange={(e) => setAddGems(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-row mt-2\">\r\n                  {ButtonData &&\r\n                    ButtonData.map((data) => (\r\n                      <button\r\n                        className=\"w-10 p-1 m-1 xl:w-12 xl:p-2 xl:m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded\"\r\n                        onClick={() => handleButtonData(data.value)}\r\n                        key={data.key}\r\n                      >\r\n                        {data.value}\r\n                      </button>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-3/4 rounded bg-yellow-50 bg-opacity-50 shadow-lg justify-self-center m-2 midbox\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-xl formtext font-black text-white my-2 mt-32 mb-32 z-10\">\r\n                  {winRate}%\r\n                </h1>\r\n                {/* <h1 className=\"text-xl font-black text-green-500 my-2 mt-32 mb-32 z-10\">\r\n                  Congrats You Won!!!\r\n                </h1> */}\r\n                {/* <h2 className=\"text-md font-black text-red-500 my-2 mt-32 mb-32 z-10\">\r\n                  Opps!!! Better luck next time.\r\n                </h2> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"rounded bg-yellow-50 bg-opacity-50 shadow-lg\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-2xl font-bold my-2 formtext\">Upgrade</h1>\r\n                <img className=\"w-1/3\" src={crystal} />\r\n                {/* <div className=\"grid grid-cols-2 justify-items-center mt-2\"> */}\r\n                {/* <input\r\n                  type=\"number\"\r\n                  value={multiplier}\r\n                  placeholder=\"Win Gems\"\r\n                  className=\"w-3/4 justify-self-end text-center placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:shadow-outline mr-1\"\r\n                  onChange={(e) => setMultiplier(e.target.value)}\r\n                /> */}\r\n                <div className=\"bg-yellow-50 px-4 rounded mt-1\">\r\n                  {\" \"}\r\n                  {/* justify-self-start ml-5 */}\r\n                  <h4 className=\"text-lg font-bold my-2 formtext\">\r\n                    {multiplier ? multiplier.toFixed(2) : \"0\"}\r\n                  </h4>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"flex flex-row mt-2\">\r\n                  {MultiplierButtonData &&\r\n                    MultiplierButtonData.map((multiplierData) => (\r\n                      <button\r\n                        className=\"w-10 p-1 m-1 xl:w-12 xl:p-2 xl:m-2  bg-blue-500 hover:bg-blue-700 text-white font-bold rounded\"\r\n                        onClick={() => handleMultiplier(multiplierData.value)}\r\n                        key={multiplierData.key}\r\n                      >\r\n                        {multiplierData.value}x\r\n                      </button>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center mt-3\">\r\n        <button\r\n          className=\"text-white bg-transparent border border-solid border-white opacity-80 hover:bg-yellow-50 hover:text-black font-bold uppercase text-xl px-6 py-3 rounded outline-none focus:outline-none mr-1 mb-1\"\r\n          type=\"button\"\r\n          style={{ transition: \"all .15s ease\" }}\r\n        >\r\n          upgrade\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Multiplygems;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js",["82","83","84"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../../Api/Api\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [login, setLogin] = useState(false);\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    login && history.go(\"/\");\r\n  }, [login]);\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      const loginStatus = await loginUser(values);\r\n      if (loginStatus === true) {\r\n        setLogin(true);\r\n      }\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n        <img className=\"orangesvg mt-8\" src={orange} />\r\n        <img className=\"purplesvg mt-8\" src={purple} />\r\n        <div className=\"glasseffect flex justify-center items-center\">\r\n          <form\r\n            className=\"flex flex-col leading-8 m-5\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <h1 className=\"text-2xl font-bold flex justify-center my-2 formtext\">\r\n              Login\r\n            </h1>\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n            ></input>\r\n            {formik.touched.email && formik.errors.email ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.email}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            ></input>\r\n            {formik.touched.password && formik.errors.password ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.password}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </button>\r\n            <div className=\"text-sm ml-auto mt-2 text-yellow-50\">\r\n              New to Lucky Gems?{\" \"}\r\n              <Link className=\"text-purple-500\" to=\"/register\">\r\n                Register\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js",["85"],"import axios from \"axios\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst header = {\r\n  headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n};\r\n\r\n// const server = \"http://localhost:5000\";\r\n\r\nexport const registerUser = async (data) => {\r\n  try {\r\n    await axios\r\n      .post(\"/lucky-api/users/register\", { data })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"info\",\r\n          title: \"something went wrong!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  } catch (error) {}\r\n};\r\n\r\nexport const loginUser = async (data) => {\r\n  let login = false;\r\n  try {\r\n    await axios\r\n      .post(\"/lucky-api/users\", { data })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          localStorage.setItem(\"name\", res.data.user.name);\r\n          localStorage.setItem(\"image\", res.data.user.image);\r\n          localStorage.setItem(\"gems\", res.data.user.gems);\r\n          localStorage.setItem(\"id\", res.data.user._id);\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          login = true;\r\n        } else {\r\n          login = false;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"info\",\r\n          title: \"Invalid Credentials!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  } catch (error) {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Server Error, Please try again later!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n\r\n  return login;\r\n};\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js",["86"],"import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Utility/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => <RouteComponent {...routeProps} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js",["87","88"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\ButtonData.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\MultiplierButtonData.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":9,"nodeType":"95","messageId":"96","endLine":12,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":40,"column":7,"nodeType":"99","endLine":40,"endColumn":49},{"ruleId":"97","severity":1,"message":"98","line":41,"column":7,"nodeType":"99","endLine":41,"endColumn":49},{"ruleId":"93","severity":1,"message":"100","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"93","severity":1,"message":"101","line":15,"column":16,"nodeType":"95","messageId":"96","endLine":15,"endColumn":23},{"ruleId":"93","severity":1,"message":"102","line":16,"column":17,"nodeType":"95","messageId":"96","endLine":16,"endColumn":25},{"ruleId":"93","severity":1,"message":"103","line":17,"column":16,"nodeType":"95","messageId":"96","endLine":17,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":102,"column":27,"nodeType":"99","endLine":105,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":109,"column":25,"nodeType":"99","endLine":109,"endColumn":72},{"ruleId":"104","severity":1,"message":"105","line":215,"column":19,"nodeType":"99","endLine":218,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":221,"column":19,"nodeType":"99","endLine":224,"endColumn":20},{"ruleId":"93","severity":1,"message":"106","line":11,"column":7,"nodeType":"95","messageId":"96","endLine":11,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":28,"column":6,"nodeType":"109","endLine":28,"endColumn":18,"suggestions":"110"},{"ruleId":"97","severity":1,"message":"98","line":55,"column":17,"nodeType":"99","endLine":55,"endColumn":55},{"ruleId":"97","severity":1,"message":"98","line":58,"column":21,"nodeType":"99","endLine":58,"endColumn":41},{"ruleId":"97","severity":1,"message":"98","line":98,"column":17,"nodeType":"99","endLine":98,"endColumn":56},{"ruleId":"107","severity":1,"message":"111","line":17,"column":6,"nodeType":"109","endLine":17,"endColumn":13,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"98","line":48,"column":9,"nodeType":"99","endLine":48,"endColumn":56},{"ruleId":"97","severity":1,"message":"98","line":49,"column":9,"nodeType":"99","endLine":49,"endColumn":56},{"ruleId":"93","severity":1,"message":"106","line":5,"column":7,"nodeType":"95","messageId":"96","endLine":5,"endColumn":13},{"ruleId":"93","severity":1,"message":"113","line":6,"column":11,"nodeType":"95","messageId":"96","endLine":6,"endColumn":22},{"ruleId":"93","severity":1,"message":"114","line":1,"column":40,"nodeType":"95","messageId":"96","endLine":1,"endColumn":46},{"ruleId":"93","severity":1,"message":"115","line":19,"column":18,"nodeType":"95","messageId":"96","endLine":19,"endColumn":27},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'orange' is defined but never used.","'setName' is assigned a value but never used.","'setimage' is assigned a value but never used.","'setGems' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addGems'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["119"],"'currentUser' is assigned a value but never used.","'useRef' is defined but never used.","'setUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [addGems, multiplier]",{"range":"124","text":"125"},"Update the dependencies array to be: [history, login]",{"range":"126","text":"127"},[979,991],"[addGems, multiplier]",[606,613],"[history, login]"]
[{"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js":"1","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js":"2","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js":"4","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js":"5","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js":"6","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js":"8","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js":"9","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js":"10","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js":"11","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js":"12","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\ButtonData.js":"13","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\MultiplierButtonData.js":"14"},{"size":498,"mtime":1611389831121,"results":"15","hashOfConfig":"16"},{"size":883,"mtime":1611423249905,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5004,"mtime":1611566521451,"results":"19","hashOfConfig":"16"},{"size":10391,"mtime":1612632969650,"results":"20","hashOfConfig":"16"},{"size":7494,"mtime":1612630870459,"results":"21","hashOfConfig":"16"},{"size":3835,"mtime":1611428002615,"results":"22","hashOfConfig":"16"},{"size":2262,"mtime":1612630115012,"results":"23","hashOfConfig":"16"},{"size":422,"mtime":1611391769122,"results":"24","hashOfConfig":"16"},{"size":791,"mtime":1611404393896,"results":"25","hashOfConfig":"16"},{"size":270,"mtime":1611394758847,"results":"26","hashOfConfig":"16"},{"size":7516,"mtime":1611569460267,"results":"27","hashOfConfig":"16"},{"size":245,"mtime":1611437179377,"results":"28","hashOfConfig":"16"},{"size":252,"mtime":1611437363941,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1f8zyqh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js",[],["63","64"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js",["65","66","67"],"import React, { useContext } from \"react\";\r\nimport \"./Form.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { registerUser } from \"../../Api/Api\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst NewForm = () => {\r\n  const history = useHistory();\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Required!\"),\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password must contain letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      registerUser(values);\r\n    },\r\n    validationSchema,\r\n  });\r\n  const { currentUser } = useContext(AuthContext);\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n      <img className=\"orangesvg\" src={orange} />\r\n      <img className=\"purplesvg\" src={purple} />\r\n      <div className=\"glasseffect flex justify-center items-center\">\r\n        <form\r\n          className=\"flex flex-col leading-8 m-5\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <h1 className=\"text-2xl flex font-bold justify-center my-2 formtext\">\r\n            Register\r\n          </h1>\r\n          <label className=\"text-yellow-50\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          ></input>\r\n\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.name}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n\r\n          <label className=\"text-yellow-50 mt-5\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          ></input>\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.email}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          <label className=\"text-yellow-50 mt-5\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          ></input>\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.password}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          {/* <label className=\"text-white mt-5\" htmlFor=\"currentJob\">\r\n            Current Job\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"currentJob\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.currentJob}\r\n          ></input>\r\n          <label className=\"text-white mt-5\" htmlFor=\"description\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.description}\r\n          ></textarea> */}\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n          <div className=\"text-sm ml-auto mt-2 text-yellow-50\">\r\n            Have an Account?{\" \"}\r\n            <Link className=\"text-purple-500\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewForm;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js",["68","69","70","71","72","73","74"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js",["75","76","77","78","79"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js",["80","81","82"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../../Api/Api\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [login, setLogin] = useState(false);\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    login && history.go(\"/\");\r\n  }, [login]);\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      const loginStatus = await loginUser(values);\r\n      if (loginStatus === true) {\r\n        setLogin(true);\r\n      }\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n        <img className=\"orangesvg mt-8\" src={orange} />\r\n        <img className=\"purplesvg mt-8\" src={purple} />\r\n        <div className=\"glasseffect flex justify-center items-center\">\r\n          <form\r\n            className=\"flex flex-col leading-8 m-5\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <h1 className=\"text-2xl font-bold flex justify-center my-2 formtext\">\r\n              Login\r\n            </h1>\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n            ></input>\r\n            {formik.touched.email && formik.errors.email ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.email}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            ></input>\r\n            {formik.touched.password && formik.errors.password ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.password}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </button>\r\n            <div className=\"text-sm ml-auto mt-2 text-yellow-50\">\r\n              New to Lucky Gems?{\" \"}\r\n              <Link className=\"text-purple-500\" to=\"/register\">\r\n                Register\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js",["83"],"import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Utility/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => <RouteComponent {...routeProps} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js",["84","85"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport \"./AddGems.css\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\nimport { Transition } from \"@tailwindui/react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MinusCircle } from \"react-feather\";\r\n\r\nconst Addgems = () => {\r\n  const history = useHistory();\r\n  const [gems, setGems] = useState(1);\r\n  const [price, setPrice] = useState(5);\r\n  const [openPayment, setOpenPayment] = useState(false);\r\n  const [cardNumber, setCardNumber] = useState();\r\n  const [cardHolderName, setCardHolderName] = useState();\r\n  const [cvvCode, setCvvCode] = useState();\r\n  const [userId, setUserId] = useState(localStorage.getItem(\"id\"));\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    let individulPrice = 5;\r\n    let totalprice = (gems * individulPrice).toFixed(2);\r\n    setPrice(totalprice);\r\n  }, [gems]);\r\n\r\n  const handleLuckyPayment = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/lucky-api/payment\", {\r\n        cardNumber,\r\n        cvvCode,\r\n        cardHolderName,\r\n        gems,\r\n        price,\r\n        userId,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          localStorage.setItem(\"gems\", res.data.updatedUser.gems);\r\n          history.go(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.dir(err);\r\n        if (err.response.status === 400) {\r\n          Swal.fire({\r\n            icon: \"info\",\r\n            title: \"Try 16 digits card number and 3 digits cvv code.\",\r\n            showConfirmButton: true,\r\n          });\r\n        } else if (err.response.status === 404) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Server down!! Please try again later\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Transition\r\n        show={openPayment}\r\n        enter=\"transition ease-out duration-500\"\r\n        enterFrom=\"transform opacity-0 scale-95\"\r\n        enterTo=\"transform opacity-100 scale-100\"\r\n        leave=\"transition ease-in duration-500\"\r\n        leaveFrom=\"transform opacity-100 scale-100\"\r\n        leaveTo=\"transform opacity-0 scale-95\"\r\n      >\r\n        <div className=\"w-full flex justify-center flex-wrap content-center h-screen\">\r\n          <div className=\"w-1/4 min-w-min flex justify-center bg-white bg-opacity-50 shadow-md rounded\">\r\n            <div\r\n              className=\"absolute mt-2 cursor-pointer\"\r\n              style={{ marginLeft: \"19rem\" }}\r\n              onClick={() => setOpenPayment(!openPayment)}\r\n            >\r\n              <MinusCircle color=\"white\" size={20} />\r\n            </div>\r\n            <form\r\n              className=\"flex flex-col leading-8 m-5\"\r\n              onSubmit={(e) => handleLuckyPayment(e)}\r\n            >\r\n              <h1 className=\"text-2xl flex font-bold justify-center my-2 formtext\">\r\n                LUCKY PAYMENT\r\n              </h1>\r\n              <label className=\"text-yellow-50\" htmlFor=\"cardNumber\">\r\n                CARD NUMBER\r\n              </label>\r\n              <input\r\n                className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n                type=\"number\"\r\n                name=\"cardNumber\"\r\n                placeholder=\"XXXX XXXX XX12 3456\"\r\n                onChange={(e) => setCardNumber(e.target.value)}\r\n                value={cardNumber}\r\n                required\r\n              ></input>\r\n              <label className=\"text-yellow-50 mt-5\" htmlFor=\"CvvCode\">\r\n                CVV CODE\r\n              </label>\r\n              <input\r\n                className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n                type=\"number\"\r\n                name=\"CvvCode\"\r\n                placeholder=\"123\"\r\n                onChange={(e) => setCvvCode(e.target.value)}\r\n                value={cvvCode}\r\n                required\r\n              ></input>\r\n              <label className=\"text-yellow-50 mt-5\" htmlFor=\"cardHolder\">\r\n                CARD HOLDER NAME\r\n              </label>\r\n              <input\r\n                className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n                type=\"text\"\r\n                name=\"cardHolder\"\r\n                placeholder=\"Optional\"\r\n                onChange={(e) => setCardHolderName(e.target.value)}\r\n                value={cardHolderName}\r\n              ></input>\r\n              <h1 className=\"flex justify-center mt-5 text-gray-700 font-bold text-xl\">\r\n                $ {price && price}\r\n              </h1>\r\n              <button\r\n                className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 rounded my-2 mt-5\"\r\n                type=\"submit\"\r\n              >\r\n                PAY\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Transition>\r\n      {!openPayment && (\r\n        <>\r\n          <Navbar />\r\n          <div className=\"flex justify-center\">\r\n            <div className=\"glasseffectuser w-4/5 p-5\">\r\n              <div className=\"flex bg-white shadow-md rounded-lg overflow-hidden\">\r\n                <div className=\"w-1/3 bg-cover  hidden lg:flex justify-center\">\r\n                  <img className=\"h-48\" src={purple} alt=\"Purple\" />\r\n                </div>\r\n                <div className=\"w-2/3 p-4\">\r\n                  <div className=\"flex\">\r\n                    <div className=\"formtext font-bold text-xl\">Purple Gem</div>\r\n                  </div>\r\n                  <div className=\"flex justify-center block lg:hidden\">\r\n                    <img className=\"h-48\" src={purple} alt=\"Purple\" />\r\n                  </div>\r\n                  <p className=\"mt-2 text-gray-600 text-sm\">\r\n                    Per Gem cost is 5 dollars.\r\n                    <br /> **At the time of withdrawal 2% will be deducted as\r\n                    convenience charge\r\n                  </p>\r\n                  <div className=\"flex item-center mt-5 \">\r\n                    <input\r\n                      type=\"number\"\r\n                      value={gems}\r\n                      placeholder=\"Add Gems\"\r\n                      className=\"w-1/2 lg:w-1/6 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:shadow-outline pl-5\"\r\n                      onChange={(e) => setGems(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex item-center justify-center mt-3 lg:flex item-center justify-between\">\r\n                    <h1 className=\"text-gray-700 font-bold text-xl mt-4\">\r\n                      $ {price ? price : \"0\"}\r\n                    </h1>\r\n                    <button\r\n                      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded my-2 uppercase\"\r\n                      onClick={() =>\r\n                        gems !== \"\" && gems !== \"0\" && setOpenPayment(true)\r\n                      }\r\n                    >\r\n                      Add Gems\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Addgems;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\ButtonData.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\MultiplierButtonData.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":12,"column":9,"nodeType":"92","messageId":"93","endLine":12,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":40,"column":7,"nodeType":"96","endLine":40,"endColumn":49},{"ruleId":"94","severity":1,"message":"95","line":41,"column":7,"nodeType":"96","endLine":41,"endColumn":49},{"ruleId":"90","severity":1,"message":"97","line":15,"column":16,"nodeType":"92","messageId":"93","endLine":15,"endColumn":23},{"ruleId":"90","severity":1,"message":"98","line":16,"column":17,"nodeType":"92","messageId":"93","endLine":16,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":25,"column":3,"nodeType":"92","endLine":25,"endColumn":12,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"95","line":106,"column":27,"nodeType":"96","endLine":109,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":113,"column":25,"nodeType":"96","endLine":113,"endColumn":72},{"ruleId":"94","severity":1,"message":"95","line":220,"column":21,"nodeType":"96","endLine":220,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":223,"column":23,"nodeType":"96","endLine":226,"endColumn":25},{"ruleId":"90","severity":1,"message":"102","line":13,"column":7,"nodeType":"92","messageId":"93","endLine":13,"endColumn":13},{"ruleId":"99","severity":1,"message":"103","line":31,"column":6,"nodeType":"104","endLine":31,"endColumn":18,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"95","line":95,"column":17,"nodeType":"96","endLine":95,"endColumn":55},{"ruleId":"94","severity":1,"message":"95","line":98,"column":21,"nodeType":"96","endLine":98,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":150,"column":17,"nodeType":"96","endLine":150,"endColumn":56},{"ruleId":"99","severity":1,"message":"106","line":17,"column":6,"nodeType":"104","endLine":17,"endColumn":13,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"95","line":48,"column":9,"nodeType":"96","endLine":48,"endColumn":56},{"ruleId":"94","severity":1,"message":"95","line":49,"column":9,"nodeType":"96","endLine":49,"endColumn":56},{"ruleId":"90","severity":1,"message":"108","line":6,"column":11,"nodeType":"92","messageId":"93","endLine":6,"endColumn":22},{"ruleId":"90","severity":1,"message":"109","line":1,"column":40,"nodeType":"92","messageId":"93","endLine":1,"endColumn":46},{"ruleId":"90","severity":1,"message":"110","line":20,"column":18,"nodeType":"92","messageId":"93","endLine":20,"endColumn":27},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setName' is assigned a value but never used.","'setimage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setGems'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["113"],"'header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addGems'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],"'currentUser' is assigned a value but never used.","'useRef' is defined but never used.","'setUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Add dependencies array: []",{"range":"122","text":"123"},"Update the dependencies array to be: [addGems, multiplier]",{"range":"124","text":"125"},"Update the dependencies array to be: [history, login]",{"range":"126","text":"127"},[1119,1119],", []",[1123,1135],"[addGems, multiplier]",[606,613],"[history, login]"]
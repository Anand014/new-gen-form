[{"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js":"1","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js":"2","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js":"4","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js":"5","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js":"6","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js":"8","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js":"9","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js":"10","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js":"11","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js":"12"},{"size":498,"mtime":1611389831121,"results":"13","hashOfConfig":"14"},{"size":883,"mtime":1611423249905,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5014,"mtime":1611404312375,"results":"17","hashOfConfig":"14"},{"size":9881,"mtime":1611423084868,"results":"18","hashOfConfig":"14"},{"size":8450,"mtime":1611414566040,"results":"19","hashOfConfig":"14"},{"size":3727,"mtime":1611414361965,"results":"20","hashOfConfig":"14"},{"size":1363,"mtime":1611422802642,"results":"21","hashOfConfig":"14"},{"size":422,"mtime":1611391769122,"results":"22","hashOfConfig":"14"},{"size":791,"mtime":1611404393896,"results":"23","hashOfConfig":"14"},{"size":270,"mtime":1611394758847,"results":"24","hashOfConfig":"14"},{"size":6124,"mtime":1611426808519,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1f8zyqh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js",[],["55","56"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js",["57","58","59"],"import React, { useContext } from \"react\";\r\nimport \"./Form.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { registerUser } from \"../../Api/Api\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst NewForm = () => {\r\n  const history = useHistory();\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Required!\"),\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      registerUser(values);\r\n    },\r\n    validationSchema,\r\n  });\r\n  const { currentUser } = useContext(AuthContext);\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n      <img className=\"orangesvg\" src={orange} />\r\n      <img className=\"purplesvg\" src={purple} />\r\n      <div className=\"glasseffect flex justify-center items-center\">\r\n        <form\r\n          className=\"flex flex-col leading-8 m-5\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <h1 className=\"text-2xl flex font-bold justify-center my-2 formtext\">\r\n            Register\r\n          </h1>\r\n          <label className=\"text-yellow-50\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          ></input>\r\n\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.name}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n\r\n          <label className=\"text-yellow-50 mt-5\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          ></input>\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.email}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          <label className=\"text-yellow-50 mt-5\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          ></input>\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"text-red-100 px-1 rounded relative\">\r\n              <span className=\"inline-block align-middle text-sm\">\r\n                {formik.errors.password}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          {/* <label className=\"text-white mt-5\" htmlFor=\"currentJob\">\r\n            Current Job\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"currentJob\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.currentJob}\r\n          ></input>\r\n          <label className=\"text-white mt-5\" htmlFor=\"description\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.description}\r\n          ></textarea> */}\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n          <div className=\"text-sm ml-auto mt-2 text-yellow-50\">\r\n            Have an Account?{\" \"}\r\n            <Link className=\"text-purple-500\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewForm;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js",["60","61","62","63","64","65","66","67"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Multiplygems\\Multiplygems.js",["68","69","70","71","72"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport crystal from \"../../assets/crystal.svg\";\r\nimport \"./Multiplygems.css\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst header = {\r\n  headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n};\r\n\r\nconst Multiplygems = () => {\r\n  const [addGems, setAddGems] = useState(\"\");\r\n  const [multiplier, setMultiplier] = useState(\"\");\r\n  const [winRate, setWinRate] = useState(\"0.000\");\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (multiplier !== \"\") {\r\n      let percent;\r\n      percent = ((addGems * 100) / multiplier).toFixed(3);\r\n      setWinRate(percent);\r\n      console.log(percent);\r\n    }\r\n  }, [multiplier]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser === null) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  });\r\n\r\n  const handleTen = () => {\r\n    setAddGems(10);\r\n  };\r\n  const handleTwenty = () => {\r\n    setAddGems(20);\r\n  };\r\n  const handleFifty = () => {\r\n    setAddGems(50);\r\n  };\r\n  const handleHundred = () => {\r\n    setAddGems(100);\r\n  };\r\n  const handleTwoHundred = () => {\r\n    setAddGems(200);\r\n  };\r\n  const handleMultiplierone = () => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = 1.5 * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n  const handleMultiplierTwo = () => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = 2 * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n  const handleMultiplierFive = () => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = 5 * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n  const handleMultiplierTen = () => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = 10 * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n  const handleMultiplierTwenty = () => {\r\n    if (addGems !== \"\") {\r\n      let multiply;\r\n      multiply = 20 * addGems;\r\n      setMultiplier(multiply);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"flex justify-center static z-10\">\r\n        <div className=\"glasseffectuser w-4/5 p-5\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3\">\r\n            <div className=\"rounded bg-yellow-50 shadow-lg bg-opacity-50\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-2xl font-bold my-2 formtext\">Your Gems</h1>\r\n                <img className=\"w-1/3\" src={purple} />\r\n                <div className=\"\">\r\n                  <span className=\"z-10 h-full leading-snug font-normal absolute absolute items-center justify-center w-8 pl-3 py-3\">\r\n                    <img src={purple} />\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={addGems}\r\n                    placeholder=\"Add Gems\"\r\n                    className=\"px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:shadow-outline pl-10\"\r\n                    onChange={(e) => setAddGems(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-row mt-2\">\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleTen}\r\n                  >\r\n                    10\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleTwenty}\r\n                  >\r\n                    20\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleFifty}\r\n                  >\r\n                    50\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleHundred}\r\n                  >\r\n                    100\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleTwoHundred}\r\n                  >\r\n                    200\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-3/4 rounded bg-yellow-50 bg-opacity-50 shadow-lg justify-self-center m-2 midbox\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-xl formtext font-black text-white my-2 mt-32 mb-32 z-10\">\r\n                  {winRate}%\r\n                </h1>\r\n                {/* <h1 className=\"text-xl font-black text-green-500 my-2 mt-32 mb-32 z-10\">\r\n                  Congrats You Won!!!\r\n                </h1> */}\r\n                {/* <h2 className=\"text-md font-black text-red-500 my-2 mt-32 mb-32 z-10\">\r\n                  Opps!!! Better luck next time.\r\n                </h2> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"rounded bg-yellow-50 bg-opacity-50 shadow-lg\">\r\n              <div className=\"grid justify-items-center\">\r\n                <h1 className=\"text-2xl font-bold my-2 formtext\">Upgrade</h1>\r\n                <img className=\"w-1/3\" src={crystal} />\r\n                {/* <div className=\"grid grid-cols-2 justify-items-center mt-2\"> */}\r\n                {/* <input\r\n                  type=\"number\"\r\n                  value={multiplier}\r\n                  placeholder=\"Win Gems\"\r\n                  className=\"w-3/4 justify-self-end text-center placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:shadow-outline mr-1\"\r\n                  onChange={(e) => setMultiplier(e.target.value)}\r\n                /> */}\r\n                <div className=\"bg-yellow-50 px-4 rounded mt-1\">\r\n                  {\" \"}\r\n                  {/* justify-self-start ml-5 */}\r\n                  <h4 className=\"text-lg font-bold my-2 formtext\">\r\n                    {multiplier ? multiplier.toFixed(2) : \"0\"}\r\n                  </h4>\r\n                </div>\r\n                {/* </div> */}\r\n                <div className=\"flex flex-row mt-2\">\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleMultiplierone}\r\n                  >\r\n                    1.5x\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleMultiplierTwo}\r\n                  >\r\n                    2x\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleMultiplierFive}\r\n                  >\r\n                    5x\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleMultiplierTen}\r\n                  >\r\n                    10x\r\n                  </button>\r\n                  <button\r\n                    className=\"w-12 bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 m-2 rounded\"\r\n                    onClick={handleMultiplierTwenty}\r\n                  >\r\n                    20x\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center mt-3\">\r\n        <button\r\n          className=\"text-white bg-transparent border border-solid border-white opacity-80 hover:bg-yellow-50 hover:text-black font-bold uppercase text-xl px-6 py-3 rounded outline-none focus:outline-none mr-1 mb-1\"\r\n          type=\"button\"\r\n          style={{ transition: \"all .15s ease\" }}\r\n        >\r\n          upgrade\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Multiplygems;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Login\\Login.js",["73","74"],"import React, { useContext, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../../Api/Api\";\r\nimport { AuthContext } from \"../../Utility/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {});\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      const loginStatus = await loginUser(values);\r\n      if (loginStatus) {\r\n        history.push(\"/\");\r\n      }\r\n    },\r\n    validationSchema,\r\n  });\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n        <img className=\"orangesvg mt-8\" src={orange} />\r\n        <img className=\"purplesvg mt-8\" src={purple} />\r\n        <div className=\"glasseffect flex justify-center items-center\">\r\n          <form\r\n            className=\"flex flex-col leading-8 m-5\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <h1 className=\"text-2xl font-bold flex justify-center my-2 formtext\">\r\n              Login\r\n            </h1>\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n            ></input>\r\n            {formik.touched.email && formik.errors.email ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.email}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <label className=\"text-yellow-50 mt-5\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-80 rounded-lg shadow-md pl-2 focus:outline-none\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            ></input>\r\n            {formik.touched.password && formik.errors.password ? (\r\n              <div className=\"text-red-100 px-1 rounded relative\">\r\n                <span className=\"inline-block align-middle text-sm\">\r\n                  {formik.errors.password}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </button>\r\n            <div className=\"text-sm ml-auto mt-2 text-yellow-50\">\r\n              New to Lucky Gems?{\" \"}\r\n              <Link className=\"text-purple-500\" to=\"/register\">\r\n                Register\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Api\\Api.js",["75"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Private\\PrivateRoute.js",["76"],"import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Utility/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => <RouteComponent {...routeProps} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Utility\\AuthContext.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Loader\\Loader.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\AddGems\\AddGems.js",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":12,"column":9,"nodeType":"85","messageId":"86","endLine":12,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":40,"column":7,"nodeType":"89","endLine":40,"endColumn":49},{"ruleId":"87","severity":1,"message":"88","line":41,"column":7,"nodeType":"89","endLine":41,"endColumn":49},{"ruleId":"83","severity":1,"message":"90","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"91","line":15,"column":16,"nodeType":"85","messageId":"86","endLine":15,"endColumn":23},{"ruleId":"83","severity":1,"message":"92","line":16,"column":17,"nodeType":"85","messageId":"86","endLine":16,"endColumn":25},{"ruleId":"83","severity":1,"message":"93","line":17,"column":16,"nodeType":"85","messageId":"86","endLine":17,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":104,"column":27,"nodeType":"89","endLine":107,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":111,"column":25,"nodeType":"89","endLine":111,"endColumn":72},{"ruleId":"94","severity":1,"message":"95","line":209,"column":19,"nodeType":"89","endLine":212,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":215,"column":19,"nodeType":"89","endLine":218,"endColumn":20},{"ruleId":"83","severity":1,"message":"96","line":9,"column":7,"nodeType":"85","messageId":"86","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":26,"column":6,"nodeType":"99","endLine":26,"endColumn":18,"suggestions":"100"},{"ruleId":"87","severity":1,"message":"88","line":94,"column":17,"nodeType":"89","endLine":94,"endColumn":55},{"ruleId":"87","severity":1,"message":"88","line":97,"column":21,"nodeType":"89","endLine":97,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":157,"column":17,"nodeType":"89","endLine":157,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":44,"column":9,"nodeType":"89","endLine":44,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":45,"column":9,"nodeType":"89","endLine":45,"endColumn":56},{"ruleId":"83","severity":1,"message":"96","line":5,"column":7,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"83","severity":1,"message":"101","line":6,"column":11,"nodeType":"85","messageId":"86","endLine":6,"endColumn":22},{"ruleId":"83","severity":1,"message":"102","line":9,"column":7,"nodeType":"85","messageId":"86","endLine":9,"endColumn":11},{"ruleId":"83","severity":1,"message":"103","line":31,"column":9,"nodeType":"85","messageId":"86","endLine":31,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'orange' is defined but never used.","'setName' is assigned a value but never used.","'setimage' is assigned a value but never used.","'setGems' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addGems'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'currentUser' is assigned a value but never used.","'date' is assigned a value but never used.","'handleLuckyPayment' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [addGems, multiplier]",{"range":"109","text":"110"},[871,883],"[addGems, multiplier]"]
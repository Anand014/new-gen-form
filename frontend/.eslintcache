[{"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js":"1","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js":"2","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js":"4","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\ShowUser\\ShowUser.js":"5","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":307,"mtime":1610643183918,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4353,"mtime":1610562644461,"results":"11","hashOfConfig":"8"},{"size":1600,"mtime":1610643027064,"results":"12","hashOfConfig":"8"},{"size":6847,"mtime":1610642819851,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f8zyqh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\index.js",[],["28","29"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\App.js",["30"],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Form\\NewForm.js",["31","32"],"import React from \"react\";\r\nimport \"./Form.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport orange from \"../../assets/orange.svg\";\r\nimport purple from \"../../assets/purple.svg\";\r\n\r\nconst NewForm = () => {\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Required!\"),\r\n    email: Yup.string().email(\"Invalid email format!\").required(\"Required!\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password is too short!\")\r\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters!\")\r\n      .required(\"Required!\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      // currentJob: \"\",\r\n      // description: \"\",\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    // register user\r\n  };\r\n\r\n  return (\r\n    <div id=\"signinfrom\" className=\"flex justify-center items-center\">\r\n      <img className=\"orangesvg\" src={orange} />\r\n      <img className=\"purplesvg\" src={purple} />\r\n      <div className=\"glasseffect flex justify-center items-center\">\r\n        <form className=\"flex flex-col leading-8 m-5\" onSubmit={submitHandler}>\r\n          <h1 className=\"text-2xl flex justify-center my-2 formtext\">\r\n            Register\r\n          </h1>\r\n          <label className=\"formtext\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          ></input>\r\n\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <div class=\"text-red-100 px-1 rounded relative\">\r\n              <span class=\"inline-block align-middle text-sm\">\r\n                {formik.errors.name}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n\r\n          <label className=\"formtext mt-5\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          ></input>\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div class=\"text-red-100 px-1 rounded relative\">\r\n              <span class=\"inline-block align-middle text-sm\">\r\n                {formik.errors.email}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          <label className=\"formtext mt-5\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          ></input>\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div class=\"text-red-100 px-1 rounded relative\">\r\n              <span class=\"inline-block align-middle text-sm\">\r\n                {formik.errors.password}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n          {/* <label className=\"text-white mt-5\" htmlFor=\"currentJob\">\r\n            Current Job\r\n          </label>\r\n          <input\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"currentJob\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.currentJob}\r\n          ></input>\r\n          <label className=\"text-white mt-5\" htmlFor=\"description\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            className=\"w-80 rounded-lg shadow-md\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.description}\r\n          ></textarea> */}\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded my-2 mt-10\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewForm;\r\n","C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\ShowUser\\ShowUser.js",[],"C:\\Users\\Anand\\Documents\\new-gen-form\\frontend\\src\\Components\\Navbar\\Navbar.js",["33","34","35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":35,"column":7,"nodeType":"47","endLine":35,"endColumn":49},{"ruleId":"45","severity":1,"message":"46","line":36,"column":7,"nodeType":"47","endLine":36,"endColumn":49},{"ruleId":"45","severity":1,"message":"46","line":79,"column":25,"nodeType":"47","endLine":79,"endColumn":69},{"ruleId":"45","severity":1,"message":"46","line":89,"column":25,"nodeType":"47","endLine":89,"endColumn":69},{"ruleId":"48","severity":1,"message":"49","line":145,"column":17,"nodeType":"47","endLine":148,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":151,"column":17,"nodeType":"47","endLine":154,"endColumn":18},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'NewForm' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]